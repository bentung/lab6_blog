{
  "version": 3,
  "sources": ["../../routes/articles.ts"],
  "sourcesContent": ["import Router, { RouterContext } from \"koa-router\";\nimport bodyParser from 'koa-bodyparser';\n\nconst articles = [\n  {\n    title: 'Hello article',\n    fullText: 'some text to fill the body',\n    creationDate: new Date()\n  },\n  {\n    title: 'Another article',\n    fullText: 'again some text to fill the body',\n    creationDate: new Date()\n  },\n  {\n    title: 'Coventry article',\n    fullText: 'some coventry details to fill the body',\n    creationDate: new Date()\n  },\n  {\n    title: 'smart campus',\n    fullText: 'smart campus ...',\n    creationDate: new Date()\n  },\n]\n\nconst router = new Router({ prefix: '/api/v1/articles' });\n\nconst getAll = async (ctx: RouterContext, next: any) => {\n  ctx.body = articles;\n  await next();\n}\n\nconst createArticle = async (ctx: RouterContext, next: any) => {\n  let { title, fullText } = ctx.request.body;\n  let newArticle = { title: title, fullText: fullText, creationDate: new Date() };\n  articles.push(newArticle);\n  ctx.status = 201;\n  ctx.body = newArticle;\n  await next();\n}\n\nconst getById = async (ctx: RouterContext, next: any) => {\n  let id = +ctx.params.id;\n  if ((id < articles.length + 1) && (id > 0)) {\n    ctx.body = articles[id - 1];\n  } else {\n    ctx.status = 404;\n  }\n  await next();\n}\n\nconst updateArticle = async (ctx: RouterContext, next: any) => {\n  let id = +ctx.params.id;\n  let { title, fullText } = ctx.request.body;\n  let updateArticle = { title: title ?? '', fullText: fullText ?? '', editedDate: new Date() };\n\n  if (id < articles.length + 1 && id > 0) {\n    articles[id - 1] = {\n      ...articles[id - 1],\n      ...updateArticle\n    };\n    ctx.body = updateArticle;\n  } else {\n    ctx.status = 404;\n  }\n  await next();\n}\n\nconst deleteArticle = async (ctx: RouterContext, next: any) => {\n  let id = +ctx.params.id;\n\n  if (id < articles.length + 1 && id > 0) {\n    articles.splice(id - 1, 1);\n    ctx.body = { message: \"deleted\" };\n  } else {\n    ctx.status = 404;\n  }\n\n  await next();\n}\n\nrouter.get('/', getAll);\nrouter.post('/', bodyParser(), createArticle);\nrouter.get('/:id([0-9]{1,})', getById);\nrouter.put('/:id([0-9]{1,})', updateArticle);\nrouter.delete('/:id([0-9]{1,})', deleteArticle);\n\nexport { router };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsC;AACtC,4BAAuB;AAEvB,MAAM,WAAW;AAAA,EACf;AAAA,IACE,OAAO;AAAA,IACP,UAAU;AAAA,IACV,cAAc,IAAI,KAAK;AAAA,EACzB;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,UAAU;AAAA,IACV,cAAc,IAAI,KAAK;AAAA,EACzB;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,UAAU;AAAA,IACV,cAAc,IAAI,KAAK;AAAA,EACzB;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,UAAU;AAAA,IACV,cAAc,IAAI,KAAK;AAAA,EACzB;AACF;AAEA,MAAM,SAAS,IAAI,kBAAAA,QAAO,EAAE,QAAQ,mBAAmB,CAAC;AAExD,MAAM,SAAS,OAAO,KAAoB,SAAc;AACtD,MAAI,OAAO;AACX,QAAM,KAAK;AACb;AAEA,MAAM,gBAAgB,OAAO,KAAoB,SAAc;AAC7D,MAAI,EAAE,OAAO,SAAS,IAAI,IAAI,QAAQ;AACtC,MAAI,aAAa,EAAE,OAAc,UAAoB,cAAc,IAAI,KAAK,EAAE;AAC9E,WAAS,KAAK,UAAU;AACxB,MAAI,SAAS;AACb,MAAI,OAAO;AACX,QAAM,KAAK;AACb;AAEA,MAAM,UAAU,OAAO,KAAoB,SAAc;AACvD,MAAI,KAAK,CAAC,IAAI,OAAO;AACrB,MAAK,KAAK,SAAS,SAAS,KAAO,KAAK,GAAI;AAC1C,QAAI,OAAO,SAAS,KAAK;AAAA,EAC3B,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,MAAM,gBAAgB,OAAO,KAAoB,SAAc;AAC7D,MAAI,KAAK,CAAC,IAAI,OAAO;AACrB,MAAI,EAAE,OAAO,SAAS,IAAI,IAAI,QAAQ;AACtC,MAAIC,iBAAgB,EAAE,OAAO,SAAS,IAAI,UAAU,YAAY,IAAI,YAAY,IAAI,KAAK,EAAE;AAE3F,MAAI,KAAK,SAAS,SAAS,KAAK,KAAK,GAAG;AACtC,aAAS,KAAK,KAAK;AAAA,MACjB,GAAG,SAAS,KAAK;AAAA,MACjB,GAAGA;AAAA,IACL;AACA,QAAI,OAAOA;AAAA,EACb,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AACA,QAAM,KAAK;AACb;AAEA,MAAM,gBAAgB,OAAO,KAAoB,SAAc;AAC7D,MAAI,KAAK,CAAC,IAAI,OAAO;AAErB,MAAI,KAAK,SAAS,SAAS,KAAK,KAAK,GAAG;AACtC,aAAS,OAAO,KAAK,GAAG,CAAC;AACzB,QAAI,OAAO,EAAE,SAAS,UAAU;AAAA,EAClC,OAAO;AACL,QAAI,SAAS;AAAA,EACf;AAEA,QAAM,KAAK;AACb;AAEA,OAAO,IAAI,KAAK,MAAM;AACtB,OAAO,KAAK,SAAK,sBAAAC,SAAW,GAAG,aAAa;AAC5C,OAAO,IAAI,mBAAmB,OAAO;AACrC,OAAO,IAAI,mBAAmB,aAAa;AAC3C,OAAO,OAAO,mBAAmB,aAAa;",
  "names": ["Router", "updateArticle", "bodyParser"]
}
