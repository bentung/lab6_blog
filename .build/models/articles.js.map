{
  "version": 3,
  "sources": ["../../models/articles.ts"],
  "sourcesContent": ["import * as db from '../helpers/database';\n\nexport const getById = async (id: any) => {\n  let query = 'SELECT * FROM articles WHERE ID = ?';\n  let values = [id];\n  let data = await db.run_query(query, values);\n  return data;\n}\n\nexport const getAll = async () => {\n  let query = 'SELECT * FROM articles';\n  let data = await db.run_query(query, null);\n  return data;\n}\n\nexport const add = async (article: any) => {\n  let keys = Object.keys(article);\n  let values = Object.values(article);\n  let key = keys.join(',');\n  let param = '';\n\n  for (let i: number = 0; i < values.length; i++) { param += '?,' }\n  param = param.slice(0, -1);\n\n  let query = `INSERT INTO articles (${key}) VALUES (${param})`;\n\n  try {\n    await db.run_insert(query, values);\n    return { status: 201 };\n  } catch (err: any) {\n    return err;\n  }\n}\n\nexport const update = async (article: any, id: any) => {\n  let keys = Object.keys(article);\n  let values = Object.values(article);\n  let key = keys.join(',');\n  let param = '';\n\n  for (let i: number = 0; i < values.length; i++) { param += `${keys[i]} = ?,` }\n  param = param.slice(0, -1);\n\n  let query = `UPDATE articles SET ${param} WHERE ID = ${id};`;\n\n  try {\n    await db.run_update(query, values);\n    return { status: 201 };\n  } catch (err: any) {\n    return err;\n  }\n}\n\nexport const deleteArticle = async (id: any) => {\n  let query = 'DELETE FROM articles WHERE ID = ?';\n  let values = [id];\n  let data = await db.run_delete(query, values);\n  return data;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB;AAEb,MAAM,UAAU,OAAO,OAAY;AACxC,MAAI,QAAQ;AACZ,MAAI,SAAS,CAAC,EAAE;AAChB,MAAI,OAAO,MAAM,GAAG,UAAU,OAAO,MAAM;AAC3C,SAAO;AACT;AAEO,MAAM,SAAS,YAAY;AAChC,MAAI,QAAQ;AACZ,MAAI,OAAO,MAAM,GAAG,UAAU,OAAO,IAAI;AACzC,SAAO;AACT;AAEO,MAAM,MAAM,OAAO,YAAiB;AACzC,MAAI,OAAO,OAAO,KAAK,OAAO;AAC9B,MAAI,SAAS,OAAO,OAAO,OAAO;AAClC,MAAI,MAAM,KAAK,KAAK,GAAG;AACvB,MAAI,QAAQ;AAEZ,WAAS,IAAY,GAAG,IAAI,OAAO,QAAQ,KAAK;AAAE,aAAS;AAAA,EAAK;AAChE,UAAQ,MAAM,MAAM,GAAG,EAAE;AAEzB,MAAI,QAAQ,yBAAyB,gBAAgB;AAErD,MAAI;AACF,UAAM,GAAG,WAAW,OAAO,MAAM;AACjC,WAAO,EAAE,QAAQ,IAAI;AAAA,EACvB,SAAS,KAAP;AACA,WAAO;AAAA,EACT;AACF;AAEO,MAAM,SAAS,OAAO,SAAc,OAAY;AACrD,MAAI,OAAO,OAAO,KAAK,OAAO;AAC9B,MAAI,SAAS,OAAO,OAAO,OAAO;AAClC,MAAI,MAAM,KAAK,KAAK,GAAG;AACvB,MAAI,QAAQ;AAEZ,WAAS,IAAY,GAAG,IAAI,OAAO,QAAQ,KAAK;AAAE,aAAS,GAAG,KAAK;AAAA,EAAU;AAC7E,UAAQ,MAAM,MAAM,GAAG,EAAE;AAEzB,MAAI,QAAQ,uBAAuB,oBAAoB;AAEvD,MAAI;AACF,UAAM,GAAG,WAAW,OAAO,MAAM;AACjC,WAAO,EAAE,QAAQ,IAAI;AAAA,EACvB,SAAS,KAAP;AACA,WAAO;AAAA,EACT;AACF;AAEO,MAAM,gBAAgB,OAAO,OAAY;AAC9C,MAAI,QAAQ;AACZ,MAAI,SAAS,CAAC,EAAE;AAChB,MAAI,OAAO,MAAM,GAAG,WAAW,OAAO,MAAM;AAC5C,SAAO;AACT;",
  "names": []
}
