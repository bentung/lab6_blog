{
  "version": 3,
  "sources": ["../../helpers/database.ts"],
  "sourcesContent": ["import { Sequelize, QueryTypes } from \"sequelize\";\nimport { config } from \"../config\";\n\nexport const run_query = async (query: string, values: any) => {\n  try {\n    const sequelize = new Sequelize(`postgres://${config.user}:${config.password}@${config.host}:${config.port}/${config.database}`);\n    await sequelize.authenticate();\n    let data = await sequelize.query(query, {\n      replacements: values,\n      type: QueryTypes.SELECT\n    });\n    await sequelize.close();\n    return data;\n  } catch (err: any) {\n    console.error(err, query, values);\n    throw 'Database query error';\n  }\n\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAsC;AACtC,oBAAuB;AAEhB,MAAM,YAAY,OAAO,OAAe,WAAgB;AAC7D,MAAI;AACF,UAAM,YAAY,IAAI,2BAAU,cAAc,qBAAO,QAAQ,qBAAO,YAAY,qBAAO,QAAQ,qBAAO,QAAQ,qBAAO,UAAU;AAC/H,UAAM,UAAU,aAAa;AAC7B,QAAI,OAAO,MAAM,UAAU,MAAM,OAAO;AAAA,MACtC,cAAc;AAAA,MACd,MAAM,4BAAW;AAAA,IACnB,CAAC;AACD,UAAM,UAAU,MAAM;AACtB,WAAO;AAAA,EACT,SAAS,KAAP;AACA,YAAQ,MAAM,KAAK,OAAO,MAAM;AAChC,UAAM;AAAA,EACR;AAEF;",
  "names": []
}
